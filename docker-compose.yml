version: '3'

services:
  # DB
  recipes-database:
    image: postgres:latest
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "postgres",
          "-U",
          "postgress"
        ]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      POSTGRES_DB: postgress
      POSTGRES_USER: postgress
      POSTGRES_PASSWORD: postgress
      POSTGRES_DATA: /var/lib/postgresql/data/pgdata
    volumes:
      - db-storage:/var/lib/postgresql/data
    networks:
      - database
    ports:
      - "5432:5432"

  # DB Visualizer
  adminer:
    image: adminer:latest
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - recipes-database
    networks:
      - database

  # Server
  persistence-recipes-api:
    container_name: persistence-recipes-api
    build:
      context: .
      dockerfile: .docker/rest-api.persistence.dev.dockerfile
    ports:
      - 3001:3001
    depends_on:
      - recipes-database
    networks:
      - database
      - persistence-layer
  
  retrieve-recipes-api:
    container_name: retrieve-recipes-api
    build:
      context: .
      dockerfile: .docker/rest-api.retrieve.dev.dockerfile
    ports:
      - 3002:3002
    depends_on:
      - persistence-recipes-api
    networks:
      - persistence-layer
      - retrieve
  
  web-interface-recipes:
    container_name: web-interface-recipes
    build:
      context: .
      dockerfile: .docker/interface.web.dev.dockerfile
    ports:
      - 3003:3003
    depends_on:
      - retrieve-recipes-api
    networks:
      - client
      - retrieve


volumes:
  db-storage:

networks:
  client:
  database:
  persistence-layer:
  retrieve:
